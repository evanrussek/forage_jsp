for (s in 1:10){
subj_data <- cdata %>% filter(s_num == s)
plot_subj_reward_v_press(subj_data)
}
head(subj_data)
head(c_data)
# clean all the data and bind
datalist <- list()
for (i in 1:10){
subj_data <- data %>% filter(s_num == i)
subj_data <- clean_subj_data(subj_data)
subj_data <- ungroup(subj_data)
datalist[[i]] <- subj_data
}
#cdata <- do.call(rbind,datalist)
cdata <- bind_rows(datalist)
head(c_data)
View(data)
View(data)
data <- read.csv('data/run2_data.csv')
head(data)
data <- data %>% ungroup() %>% bind_cols(s_num = group_indices(., subjectID))
data <- data %>% mutate(subj = factor(s_num))
data$subj
data <- read.csv('data/run2_data.csv')
head(data)
data <- data %>% ungroup() %>% bind_cols(s_num = group_indices(., subjectID))
data <- data %>% mutate(subj = factor(s_num))
data$s_num
data <- read.csv('data/run2_data.csv')
head(data)
data <- data %>% ungroup() %>% bind_cols(s_num = group_indices(., subjectID))
data <- data %>% mutate(subj = factor(s_num))
data %>% filter(s_num == 1)
data <- read.csv('data/run2_data.csv')
#head(data)
data <- data %>% ungroup() %>% bind_cols(s_num = group_indices(., subjectID))
data <- data %>% mutate(subj = factor(s_num))
data %>% filter(s_num == 1)
data_list
# clean all the data and bind
datalist <- list()
for (i in 1:10){
subj_data <- data %>% filter(s_num == i)
subj_data <- clean_subj_data(subj_data)
subj_data <- ungroup(subj_data)
datalist[[i]] <- subj_data
}
#cdata <- do.call(rbind,datalist)
cdata <- bind_rows(datalist)
source("plot_funcs.R")
```{r}
data_list
datalist
subj_data <- data %>% filter(s_num == 1)
subj_data <- data %>% filter(s_num == 1)
subj_data <- clean_subj_data(subj_data)
head(subj_data)
subj_data <- data %>% filter(s_num == 1)
head(subj_data)
#subj_data <- clean_subj_data(subj_data)
subj_data <- data %>% filter(s_num == 1)
head(subj_data)
subj_data <- subj_data %>% select(round, phase, reward_obs, reward_true, lag, exit, start_reward, n_travel_steps, travel_key, subjectID, trial_num, s_num, correct_key)
subj_data <- data %>% filter(s_num == 1)
#head(subj_data)
subj_data <- subj_data %>% select(round, phase, reward_obs, reward_true, lag, exit, start_reward, n_travel_steps, travel_key, subjectID, trial_num, s_num, correct_key)
head(subj_data)
subj_data <- data %>% filter(s_num == 1)
#head(subj_data)
subj_data <- subj_data %>% select(round, phase, reward_obs, reward_true, lag, exit, start_reward, n_travel_steps, travel_key, subjectID, trial_num, s_num, correct_key)
subj_data <- subj_data %>% select(round, phase, reward_obs, reward_true, lag, exit, start_reward, n_travel_steps,
travel_key, subjectID, trial_num, s_num, correct_key) %>% group_by(trial_num) %>%
mutate(press_num = 1:n(), round = as.factor(round),
rep_number = case_when(trial_num < 7 ~ 1, TRUE ~ 2)) %>%
mutate(phase = replace(phase, phase == "Harvest", "HARVEST"))
head(subj_data)
key_hard <- "['A (x 6) -> L (x 1) -> F (x 1) -> H (x 1)']"
key_easy <- "['H (x 6) -> A (x 1) -> L (x 1) -> F (x 1)']"
head(subj_data)
subj_data <- subj_data %>% group_by(trial_num) %>%
mutate(travel_key = replace(travel_key, travel_key == "", first(travel_key[travel_key != ""]))) %>%
mutate(travel_key_cond = case_when(travel_key == key_hard   ~ "HARD",
travel_key == key_easy  ~ "EASY")) %>%
filter(!is.na(travel_key_cond))
# clean all the data and bind
datalist <- list()
for (i in 1:10){
subj_data <- data %>% filter(s_num == i)
subj_data <- clean_subj_data(subj_data)
subj_data <- ungroup(subj_data)
datalist[[i]] <- subj_data
}
#cdata <- do.call(rbind,datalist)
cdata <- bind_rows(datalist)
# clean all the data and bind
datalist <- list()
for (i in 1:10){
subj_data <- data %>% filter(s_num == i)
subj_data <- clean_subj_data(subj_data)
subj_data <- ungroup(subj_data)
datalist[[i]] <- subj_data
}
#cdata <- do.call(rbind,datalist)
cdata <- bind_rows(datalist)
head(cdata)
# clean all the data and bind
datalist <- list()
for (i in 1:10){
subj_data <- data %>% filter(s_num == i)
subj_data <- clean_subj_data2(subj_data)
subj_data <- ungroup(subj_data)
datalist[[i]] <- subj_data
}
# clean all the data and bind
source("plot_funcs.R")
datalist <- list()
for (i in 1:10){
subj_data <- data %>% filter(s_num == i)
subj_data <- clean_subj_data2(subj_data)
subj_data <- ungroup(subj_data)
datalist[[i]] <- subj_data
}
# clean all the data and bind
source("plot_funcs.R")
datalist <- list()
for (i in 1:10){
subj_data <- data %>% filter(s_num == i)
subj_data <- clean_subj_data2(subj_data)
subj_data <- ungroup(subj_data)
datalist[[i]] <- subj_data
}
#cdata <- do.call(rbind,datalist)
cdata <- bind_rows(datalist)
head(cdata)
source("plot_funcs.R")
# plot reward vs press number for each subject
for (s in 1:10){
subj_data <- cdata %>% filter(s_num == s)
plot_subj_reward_v_press(subj_data)
}
unique(cdata$subj))
unique(cdata$subj)
unique(cdata$s_num)
# all the RTs from this trial...
rep_1_lag = ggplot(subj_data, aes(x = press_num, y = lag, group = round))  +
#geom_rect(data = t1_data, aes(xmin = press_num - 0.5, xmax = press_num + 0.5, ymin = -Inf, ymax = Inf, fill = round)) +
geom_point(aes(color = phase)) + facet_grid(n_travel_steps ~ travel_key_cond) + theme(legend.position = "none") + ylim(0,350)
# all the RTs from this trial...
rep_1_lag = ggplot(subj_data, aes(x = press_num, y = lag, group = round))  +
#geom_rect(data = t1_data, aes(xmin = press_num - 0.5, xmax = press_num + 0.5, ymin = -Inf, ymax = Inf, fill = round)) +
geom_point(aes(color = phase)) + facet_grid(n_travel_steps ~ travel_key_cond) + theme(legend.position = "none") + ylim(0,350)
plot(rep_1_lag)
# all the RTs from this trial...
rep_1_lag = ggplot(subj_data, aes(x = press_num, y = reward_true, group = round))  +
#geom_rect(data = t1_data, aes(xmin = press_num - 0.5, xmax = press_num + 0.5, ymin = -Inf, ymax = Inf, fill = round)) +
geom_point(aes(color = phase)) + facet_grid(n_travel_steps ~ travel_key_cond) + theme(legend.position = "none") + ylim(0,350)
plot(rep_1_lag)
# all the RTs from this trial...
rep_1_lag = ggplot(subj_data, aes(x = press_num, y = reward_true, group = round))  +
#geom_rect(data = t1_data, aes(xmin = press_num - 0.5, xmax = press_num + 0.5, ymin = -Inf, ymax = Inf, fill = round)) +
geom_point(aes(color = phase)) + facet_grid(n_travel_steps ~ travel_key_cond) + theme(legend.position = "none") #ylim(0,350)
plot(rep_1_lag)
source("plot_funcs.R")
# plot reward vs press number for each subject
for (s in 1:10){
subj_data <- cdata %>% filter(s_num == s)
plot_subj_reward_v_press(subj_data)
}
source("plot_funcs.R")
# plot reward vs press number for each subject
for (s in 1:10){
subj_data <- cdata %>% filter(s_num == s)
plot_subj_reward_v_press2(subj_data)
}
# compute exit threshold for each round for each subject / trial
get_trial_exits <- function(thdata){
# get harvest
last_phase <- last(thdata$phase)
# go through data.. if last phase was harvest, remove that round...
if (last_phase == "HARVEST"){
last_round <- last(thdata$round)
# get the last reward ops...
last_reward_ob <- last(thdata$reward_obs[!is.na(thdata$reward_obs)])
#if (last_reward_ob > 8){
thdata <- thdata %>% filter(round != last_round)
#}
}
# now select harvest data
thdata <- thdata %>% filter(phase == "HARVEST", !is.na(reward_obs)) # find out why reward_true has so many .na
## get either last true reward observed
return_tbl <- thdata %>%
group_by(round) %>%
summarise(s_num = first(s_num), last_reward = last(reward_obs),
trial_num = first(trial_num),
n_travel_steps = first(n_travel_steps),
travel_key_cond = first(travel_key_cond),
rep_number = first(rep_number)) %>% ungroup()
return(return_tbl)
}
#sdata %>% group_by(trial_num) %>%
#  do(get_trial_exits(.))
exit_data <- cdata %>% group_by(s_num, trial_num) %>%
do(get_trial_exits(.)) %>% ungroup()
library(Hmisc)
library(Hmisc)
for (s in 1:10){
p <- ggplot(data = exit_data %>% filter(s_num == s),
mapping = aes(x = travel_key_cond, y = last_reward)) +
geom_dotplot(binaxis='y', stackdir = 'center', stackratio = 1.5, dotsize = 1.5) +
facet_grid(n_travel_steps ~ rep_number) + theme_minimal()
pn <- p + stat_summary(fun.data=mean_sdl, fun.args = list(mult=1),
geom="pointrange", color="red") + ggtitle(paste('subj: ', s))
plot(pn)
}
# do some aggregating over exit thresholds...
# just get the mean for each subject for each timepoint, collapse accross rep number...
mn_exit <- exit_data %>% group_by(s_num, n_travel_steps, travel_key_cond) %>%
summarise(rep_exit_thresh = mean(last_reward)) %>%
group_by(s_num, n_travel_steps, travel_key_cond) %>%
summarise(exit_thresh = mean(rep_exit_thresh)) %>%
mutate(subj = as.factor(s_num)) %>% ungroup()
# now just plot this for each subject -- draw lines to show easy - hard effect
ggplot(mn_exit, aes(x = travel_key_cond, y = exit_thresh)) + geom_dotplot(binaxis = 'y', aes(fill = subj), dotsize = 1.2) + geom_line(aes(group = subj, color = subj), size = 1.2) +
facet_grid(.~n_travel_steps) + theme_minimal() + labs(y = 'Mean Last Reward Collected', x = 'Travel Sequence', subtitle = '# Travel Presses') #theme(legend.position = "none")
ggplot(mn_exit, aes(x = factor(n_travel_steps), y = exit_thresh)) +
geom_dotplot(binaxis = 'y', aes(fill = subj), dotsize = 1.2) +
geom_line(aes(group = subj, color = subj), size = 1.2) +
facet_grid(.~travel_key_cond) +
theme_minimal() +
labs(y = 'Mean Last Reward Collected', x = 'Travel Key Condition', subtitle = '# Travel Presses')
#theme(legend.position = "none")
knitr::opts_chunk$set(echo = TRUE)
multiply terms on right
$ = (diag(e^{-R}) - T)^{-1} \cdot (diag(e^{-R}) - T  + diag(e^{-R})Tdiag(e^{R}) - TTdiag(e^{R}) + diag(e^{-R})T^{2}diag(e^{2R}) - TT^{2}diag(e^{2R}))$
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#setwd("C:/Users/erussek/forage_jsp/analysis")
setwd("/Users/evanrussek/forage_jsp/analysis")
## load in libraries...
rm(list = ls())
library(tidyr)
library(dplyr)
library(ggplot2)
library(brms)
install.packages(brms)
install.packages('brms'')
install.packages('brms')
#setwd("C:/Users/erussek/forage_jsp/analysis")
setwd("/Users/evanrussek/forage_jsp/analysis")
## load in libraries...
rm(list = ls())
library(tidyr)
library(dplyr)
library(ggplot2)
library(brms)
source("round_5_funcs.R")
setwd("C:/Users/erussek/forage_jsp/analysis")
#setwd("C:/Users/erussek/forage_jsp/analysis")
setwd("/Users/evanrussek/forage_jsp/analysis")
## load in libraries...
rm(list = ls())
library(tidyr)
library(dplyr)
library(ggplot2)
library(brms)
source("round_5_funcs.R")
cdata <- get_cdata()
#cdata
# lag data # maximal
lag_data <- make_filt_lag(cdata, 100, 100)
lag_data$start_reward_scale = scale(lag_data$start_reward)
lag_data %>% select(phase, round, press_num) %>% head()
lag_data <- lag_data %>%
ungroup() %>%
mutate(subj = as.factor(s_num),
harvest_easy = 1*(phase == "HARVEST" & travel_key_cond == "EASY"),
harvest_hard = 1*(phase == "HARVEST" & travel_key_cond == "HARD"),
travel_easy = 1*(phase == "TRAVEL" & travel_key_cond == "EASY"),
travel_hard = 1*(phase == "TRAVEL" & travel_key_cond == "HARD"))
#lag_data <- lag_data %>% group_by(subj, trial_num, phase, round) %>%
#  mutate(press_num = row_number()) %>% ungroup()
lag_data
load(file = "lag1_brm_lognormal")
lag_draws <-  as.data.frame(lag1_brm_lognormal) #%>% select(b_start_reward_scale, )
head(lag_draws)
# compute contrasts...
lag_draws <- lag_draws %>% mutate(b_diff = .5*b_hard - .5*b_easy,
b_diff_r_int = 1*b_hard.start_reward_scale - 1*b_easy.start_reward_scale,
b_r = .5*b_easy.start_reward_scale + .5*b_hard.start_reward_scale)
lag_draws <-  as.data.frame(lag1_brm_lognormal) #%>% select(b_start_reward_scale, )
head(lag_draws)
key_draws <- lag_draws %>% select(b_harvest_easy, b_harvest_hard) %>% gather(var_name, value)
ggplot(key_draws,
aes(x = value, fill = var_name)) + geom_histogram(binwidth = .00) + ggtitle('lag model') #+ facet_wrap(~var_name)
launch_shinystan(lag1_brm_lognormal)
#setwd("C:/Users/erussek/forage_jsp/analysis")
setwd("/Users/evanrussek/forage_jsp/analysis")
## load in libraries...
rm(list = ls())
library(tidyr)
library(dplyr)
library(ggplot2)
library(brms)
#setwd("C:/Users/erussek/forage_jsp/analysis")
setwd("/Users/evanrussek/forage_jsp/analysis")
## load in libraries...
rm(list = ls())
library(tidyr)
library(dplyr)
library(ggplot2)
library(brms)
source("round_5_funcs.R")
cdata <- get_cdata()
# exit data for each round...
exit_data <- get_exit_data(cdata)
exit_data$start_reward_scale = scale(exit_data$start_reward)
head(exit_data)
exit1_draws <-  as.data.frame(exit1_brm) #%>% select(b_start_reward_scale, )
#save(exit1_brm, file = 'exit1_brm')
load(file = 'exit1_brm')
exit1_draws <-  as.data.frame(exit1_brm) #%>% select(b_start_reward_scale, )
#head(exit1_draws)
key_draws <- exit1_draws %>%
select(b_start_reward_scale, b_travel_key_condHARD,b_start_reward_scale.travel_key_condHARD) %>%
gather(var_name, value)
exit1_draws <-  as.data.frame(exit1_brm) #%>% select(b_start_reward_scale, )
head(exit1_draws)
#key_draws <- exit1_draws %>%
#  select(b_start_reward_scale, b_travel_key_condHARD,b_start_reward_scale.travel_key_condHARD) %>%
#  gather(var_name, value)
#head(key_draws) %>% gather(var_name, value)
#setwd("C:/Users/erussek/forage_jsp/analysis")
setwd("/Users/evanrussek/forage_jsp/analysis")
## load in libraries...
#rm(list = ls())
library(tidyr)
library(dplyr)
library(ggplot2)
library(brms)
source("round_5_funcs.R")
# lag data # maximal
lag_data <- make_filt_lag(cdata, 100, 100)
cdata <- get_cdata()
#cdata
# lag data # maximal
lag_data <- make_filt_lag(cdata, 100, 100)
lag_data$start_reward_scale = scale(lag_data$start_reward)
lag_data %>% select(phase, round, press_num) %>% head()
load(file = "lag1_brm_lognormal")
launch_shinystan(lag1_brm_lognormal)
launch_shinystan(lag1_brm_lognormal)
#setwd("C:/Users/erussek/forage_jsp/analysis")
setwd("/Users/evanrussek/forage_jsp/analysis")
#rm(list = ls())
library(tidyr)
library(dplyr)
library(zoo)
library(ggplot2)
library(ggpubr)
library(RcppRoll)
library(knitr)
data <- read.csv('data/run5_data.csv')
#head(data)
data <- data %>% ungroup() %>% bind_cols(s_num = group_indices(., subjectID))
data <- data %>% mutate(subj = factor(s_num))
n_subj <- length(unique(data$s_num))
#setwd("C:/Users/erussek/forage_jsp/analysis")
setwd("/Users/evanrussek/forage_jsp/analysis")
## load in libraries...
#rm(list = ls())
library(tidyr)
library(dplyr)
library(ggplot2)
source("round_5_funcs.R")
source("round_5_funcs.R")
cdata <- get_cdata()
#cdata
# lag data # maximal
lag_data <- make_filt_lag(cdata, 100, 100)
lag_data$start_reward_scale = scale(lag_data$start_reward)
lag_data %>% select(phase, round, press_num) %>% head()
trial_lag_r1 <- make_trial_filt_lag2(cdata, 20, 1)
trial_lag_r1 <- make_trial_filt_lag2(cdata, 20, 1)
plot_group_lag(trial_lag_r1)
plot_group_lag <- function(trial_filt_lag){
group_lag <- trial_filt_lag %>% group_by(start_reward, travel_key_cond, phase) %>% summarise(gm_lag = mean(mean_log_lag), gml_lag = mean(mean_log_lag, na.rm = TRUE), gsd_lag = sd(mean_log_lag, na.rm = TRUE)/sqrt(n())) %>% ungroup()
group_plot <- ggplot(group_lag,
aes(x = factor(start_reward), y = gml_lag, color = travel_key_cond)) +
geom_ribbon(aes(ymin = gml_lag - gsd_lag, ymax = gml_lag+gsd_lag),
fill = 'grey70'  , size = 1.5) +
geom_line(aes(group = travel_key_cond), size = 2) +
facet_wrap(~phase) + geom_point(size = 2) +
xlab('First Harvest Reward') +
ylab('Press Lag (log msec)') +  theme_classic() +
ggtitle('Lag Data (First Travel/Harvest, N = 50)') +
theme(axis.text = element_text(size = rel(2))) +
theme(axis.title = element_text(size = rel(2))) +
labs(colour = "Travel \nAction") +
theme(legend.title = element_text(size = rel(2))) +
theme(plot.title = element_text(size = rel(2))) +
theme(legend.text = element_text(size = rel(2))) +
theme(strip.text.x = element_text(size = rel(2))) +
theme(panel.spacing = unit(1.5, "lines")) +
scale_x_discrete(name = 'First Harvest Reward', breaks=c(60,90,120)) +scale_colour_grey()
return(group_plot)
}
trial_lag_r1 <- make_trial_filt_lag2(cdata, 20, 1)
plot_group_lag(trial_lag_r1)
trial_lag_r2 <- make_trial_filt_lag2(cdata, 20, 2)
plot_group_lag(trial_lag_r2)
trial_lag_r2 <- make_trial_filt_lag2(cdata, 20, 3)
plot_group_lag(trial_lag_r2)
trial_lag_r2 <- make_trial_filt_lag2(cdata, 20, 4)
plot_group_lag(trial_lag_r2)
trial_lag_r2 <- make_trial_filt_lag2(cdata, 20, 5)
plot_group_lag(trial_lag_r2)
trial_lag_r2 <- make_trial_filt_lag2(cdata, 20, 100)
plot_group_lag(trial_lag_r2)
trial_lag_r2 <- make_trial_filt_lag2(cdata, 20, 5)
plot_group_lag(trial_lag_r2)
trial_lag_r2 <- make_trial_filt_lag2(cdata, 10, 5)
plot_group_lag(trial_lag_r2)
# clean all the data and bind
datalist <- list()
for (i in 1:5){
datalist[[i]] <- make_trial_filt_lag2(cdata, 20, i)
}
#cdata <- do.call(rbind,datalist)
trial_filt_lag_all <- bind_rows(datalist)
head(trial_filt_lag_all)
trial_filt_lag_all$round
trial_filt_lag_all$round_num
# clean all the data and bind
datalist <- list()
for (i in 1:5){
trial_filt_lag <- make_trial_filt_lag2(cdata, 20, i)
trial_filt_lag$round <- i
datalist[[i]] <- trial_filt_lag
}
#cdata <- do.call(rbind,datalist)
trial_filt_lag_all <- bind_rows(datalist)
ggplot(trial_filt_lag_all %>% filter(phase == "HARVEST") , aes(x=round, y = mean_log_lag)) +
facet_grid(travel_key_cond~start_reward) + geom_point()
ggplot(trial_filt_lag_all %>% filter(phase == "HARVEST") , aes(x=round, y = mean_log_lag, group = subj)) +
facet_grid(travel_key_cond~start_reward) + geom_point()
ggplot(trial_filt_lag_all %>% filter(phase == "HARVEST") , aes(x=round, y = mean_log_lag, group = subj, color = subj)) +
facet_grid(travel_key_cond~start_reward) + geom_point()
ggplot(trial_filt_lag_all %>% filter(phase == "HARVEST") , aes(x=round, y = mean_log_lag, group = subj, color = subj)) +
facet_grid(travel_key_cond~start_reward) + geom_point() + geom_line()
subj_trial_filt_lag <- trial_filt_lag_all %>%
group_by(start_reward, travel_key_cond, phase,round) %>% summarise(gml_lag = mean(mean_log_lag, na.rm = TRUE))
ggplot(subj_trial_filt_lag %>% filter(phase == "HARVEST") , aes(x=round, y = mean_log_lag)) +
facet_grid(travel_key_cond~start_reward) + geom_point() + geom_line()
subj_trial_filt_lag <- trial_filt_lag_all %>%
group_by(start_reward, travel_key_cond, phase,round) %>%
summarise(gml_lag = mean(mean_log_lag, na.rm = TRUE))
ggplot(subj_trial_filt_lag %>% filter(phase == "HARVEST") , aes(x=round, y = gml_lag)) +
facet_grid(travel_key_cond~start_reward) + geom_point() + geom_line()
ggplot(subj_trial_filt_lag %>% filter(phase == "TRAVEL") , aes(x=round, y = gml_lag)) +
facet_grid(travel_key_cond~start_reward) + geom_point() + geom_line()
subj_trial_filt_lag <- trial_filt_lag_all %>%
group_by(start_reward, travel_key_cond, phase,round) %>%
summarise(gml_lag = mean(mean_log_lag, na.rm = TRUE))
ggplot(subj_trial_filt_lag %>% filter(phase == "HARVEST") , aes(x=round, y = gml_lag, color = travel_key_cond)) +
facet_grid(travel_key_cond~start_reward) + geom_point() + geom_line()
subj_trial_filt_lag <- trial_filt_lag_all %>%
group_by(start_reward, travel_key_cond, phase,round) %>%
summarise(gml_lag = mean(mean_log_lag, na.rm = TRUE))
ggplot(subj_trial_filt_lag %>% filter(phase == "HARVEST") , aes(x=round, y = gml_lag, color = travel_key_cond)) +
facet_wrap(~start_reward) + geom_point() + geom_line()
# clean all the data and bind
datalist <- list()
for (i in 1:6){
trial_filt_lag <- make_trial_filt_lag2(cdata, 20, i)
trial_filt_lag$round <- i
datalist[[i]] <- trial_filt_lag
}
#cdata <- do.call(rbind,datalist)
trial_filt_lag_all <- bind_rows(datalist)
subj_trial_filt_lag <- trial_filt_lag_all %>%
group_by(start_reward, travel_key_cond, phase,round) %>%
summarise(gml_lag = mean(mean_log_lag, na.rm = TRUE))
ggplot(subj_trial_filt_lag %>% filter(phase == "HARVEST") , aes(x=round, y = gml_lag, color = travel_key_cond)) +
facet_wrap(~start_reward) + geom_point() + geom_line()
ggplot(subj_trial_filt_lag %>% filter(phase == "TRAVEL") , aes(x=round, y = gml_lag, color = travel_key_cond))) +
ggplot(subj_trial_filt_lag %>% filter(phase == "TRAVEL") , aes(x=round, y = gml_lag, color = travel_key_cond)) +
facet_wrap(~start_reward) + geom_point() + geom_line()
for (s in 1:2){
ggplot(trial_filt_lag_all %>% filter(phase == "HARVEST", subj == s) , aes(x=round, y = gml_lag, color = travel_key_cond)) +
facet_wrap(~start_reward) + geom_point() + geom_line()
}
for (s in 1:2){
this_plot <- ggplot(trial_filt_lag_all %>% filter(phase == "HARVEST", subj == s) , aes(x=round, y = gml_lag, color = travel_key_cond)) +
facet_wrap(~start_reward) + geom_point() + geom_line()
print(this_plot)
}
for (s in 1:2){
this_plot <- ggplot(trial_filt_lag_all %>% filter(phase == "HARVEST", subj == s) , aes(x=round, y = mean_log_lag, color = travel_key_cond)) +
facet_wrap(~start_reward) + geom_point() + geom_line()
print(this_plot)
}
for (s in 1:50){
this_plot <- ggplot(trial_filt_lag_all %>% filter(phase == "HARVEST", subj == s) , aes(x=round, y = mean_log_lag, color = travel_key_cond)) +
facet_wrap(~start_reward) + geom_point() + geom_line()
print(this_plot)
}
subj_trial_filt_lag <- trial_filt_lag_all %>%
group_by(start_reward, travel_key_cond, phase,round) %>%
summarise(gml_lag = mean(mean_lag, na.rm = TRUE))
ggplot(subj_trial_filt_lag %>% filter(phase == "HARVEST") , aes(x=round, y = gml_lag, color = travel_key_cond)) +
facet_wrap(~start_reward) + geom_point() + geom_line()
