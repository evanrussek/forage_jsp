# reaction times...
ggplot(cdata, aes(x=lag)) + geom_histogram(binwidth = 10) + xlim(0,500) + facet_wrap( ~ s_num)
# reaction times...
ggplot(cdata, aes(x=lag)) + geom_histogram(binwidth = 10) + xlim(0,350) + facet_wrap( ~ s_num)
# reaction times...
ggplot(cdata, aes(x=lag)) + geom_histogram(binwidth = 10) + xlim(0,350) + facet_wrap( ~ s_num)
## a bit more sensible...
lag_data <- cdata %>% select(s_num, rep_number, travel_key_cond, n_travel_steps, phase, trial_num, lag, correct_key, round, trial_num) %>% mutate(log_lag = log(lag)) %>% group_by(s_num, trial_num, round, phase) %>% slice(-1) %>% ungroup() %>% mutate(subj = as.factor(s_num))
# reaction times...
## a bit more sensible...
lag_data <- cdata %>% select(s_num, rep_number, travel_key_cond, n_travel_steps, phase, trial_num, lag, correct_key, round, trial_num) %>% mutate(log_lag = log(lag)) %>% group_by(s_num, trial_num, round, phase) %>% slice(-1) %>% ungroup() %>% mutate(subj = as.factor(s_num))
ggplot(lag_data, aes(x=lag)) + geom_histogram(binwidth = 10) + xlim(0,350) + facet_wrap( ~ s_num)
# reaction times...
## a bit more sensible...
lag_data <- cdata %>% select(s_num, rep_number, travel_key_cond, n_travel_steps, phase, trial_num, lag, correct_key, round, trial_num) %>% mutate(log_lag = log(lag)) %>% group_by(s_num, trial_num, round, phase) %>% slice(-1) %>% ungroup() %>% mutate(subj = as.factor(s_num))
ggplot(lag_data, aes(x=lag)) + geom_histogram(binwidth = 10) + xlim(100,300) + facet_wrap( ~ s_num)
# reaction times...
## a bit more sensible...
lag_data <- cdata %>% select(s_num, rep_number, travel_key_cond, n_travel_steps, phase, trial_num, lag, correct_key, round, trial_num) %>% mutate(log_lag = log(lag)) %>% group_by(s_num, trial_num, round, phase) %>% slice(-1) %>% ungroup() %>% mutate(subj = as.factor(s_num))
ggplot(lag_data, aes(x=lag)) + geom_histogram(binwidth = 10) + xlim(50,300) + facet_wrap( ~ s_num)
# reaction times...
## a bit more sensible...
lag_data <- cdata %>% select(s_num, rep_number, travel_key_cond, n_travel_steps, phase, trial_num, lag, correct_key, round, trial_num) %>% mutate(log_lag = log(lag)) %>% group_by(s_num, trial_num, round, phase) %>% slice(-1) %>% ungroup() %>% mutate(subj = as.factor(s_num))
ggplot(lag_data, aes(x=lag)) + geom_histogram(binwidth = 10) + xlim(50,300) + facet_wrap( ~ s_num)
ggplot(lag_data, aes(x=log_lag))  + geom_histogram(binwidth = .05) + facet_wrap( ~ s_num)
# reaction times...
## a bit more sensible...
lag_data <- cdata %>% select(s_num, rep_number, travel_key_cond, n_travel_steps, phase, trial_num, lag, correct_key, round, trial_num) %>% mutate(log_lag = log(lag)) %>% group_by(s_num, trial_num, round, phase) %>% slice(-1) %>% ungroup() %>% mutate(subj = as.factor(s_num))
ggplot(lag_data, aes(x=lag)) + geom_histogram(binwidth = 10) + xlim(50,300) + facet_wrap( ~ s_num)
ggplot(lag_data, aes(x=log_lag))  + geom_histogram(binwidth = .01) + facet_wrap( ~ s_num)
# reaction times...
## a bit more sensible...
lag_data <- cdata %>% select(s_num, rep_number, travel_key_cond, n_travel_steps, phase, trial_num, lag, correct_key, round, trial_num) %>% mutate(log_lag = log(lag)) %>% group_by(s_num, trial_num, round, phase) %>% slice(-1) %>% ungroup() %>% mutate(subj = as.factor(s_num))
ggplot(lag_data, aes(x=lag)) + geom_histogram(binwidth = 10) + xlim(50,300) + facet_wrap( ~ s_num)
#ggplot(lag_data, aes(x=log_lag))  + geom_histogram(binwidth = .01) + facet_wrap( ~ s_num)
filt_lag <- lag_data %>% group_by(s_num) %>% filter(log_lag < (mean(log_lag) + 3*sd(log_lag)) , log_lag > (mean(log_lag) - 3*sd(log_lag))) %>% ungroup()
# reaction times...
## a bit more sensible...
lag_data <- cdata %>% select(s_num, rep_number, travel_key_cond, n_travel_steps, phase, trial_num, lag, correct_key, round, trial_num) %>% mutate(log_lag = log(lag)) %>% group_by(s_num, trial_num, round, phase) %>% slice(-1) %>% ungroup() %>% mutate(subj = as.factor(s_num))
ggplot(lag_data, aes(x=lag)) + geom_histogram(binwidth = 10) + xlim(50,300) + facet_wrap( ~ s_num)
#ggplot(lag_data, aes(x=log_lag))  + geom_histogram(binwidth = .01) + facet_wrap( ~ s_num)
filt_lag <- lag_data %>% group_by(s_num) %>% filter(log_lag < (mean(log_lag) + 3*sd(log_lag)) , log_lag > (mean(log_lag) - 3*sd(log_lag))) %>% ungroup()
ggplot(filt_lag, aes(x=lag)) + geom_histogram(binwidth = 10)  + facet_wrap(~s_num)
# reaction times...
## a bit more sensible...
lag_data <- cdata %>% select(s_num, rep_number, travel_key_cond, n_travel_steps, phase, trial_num, lag, correct_key, round, trial_num) %>% mutate(log_lag = log(lag)) %>% group_by(s_num, trial_num, round, phase) %>% slice(-1) %>% ungroup() %>% mutate(subj = as.factor(s_num))
ggplot(lag_data, aes(x=lag)) + geom_histogram(binwidth = 10) + xlim(50,300) + facet_wrap( ~ s_num)
#ggplot(lag_data, aes(x=log_lag))  + geom_histogram(binwidth = .01) + facet_wrap( ~ s_num)
filt_lag <- lag_data %>% group_by(s_num) %>% filter(log_lag < (mean(log_lag) + 3*sd(log_lag)) , log_lag > (mean(log_lag) - 3*sd(log_lag))) %>% ungroup()
ggplot(filt_lag, aes(x=lag)) + geom_histogram(binwidth = 10)  + facet_wrap(~s_num) + xlim(50,350)
# reaction times...
## a bit more sensible...
lag_data <- cdata %>% select(s_num, rep_number, travel_key_cond, n_travel_steps, phase, trial_num, lag, correct_key, round, trial_num) %>% mutate(log_lag = log(lag)) %>% group_by(s_num, trial_num, round, phase) %>% slice(-1) %>% ungroup() %>% mutate(subj = as.factor(s_num))
ggplot(lag_data, aes(x=lag)) + geom_histogram(binwidth = 10) + xlim(50,300) + facet_wrap( ~ s_num)
#ggplot(lag_data, aes(x=log_lag))  + geom_histogram(binwidth = .01) + facet_wrap( ~ s_num)
filt_lag <- lag_data %>% group_by(s_num) %>% filter(log_lag < (mean(log_lag) + 3*sd(log_lag)) , log_lag > (mean(log_lag) - 3*sd(log_lag))) %>% ungroup()
ggplot(filt_lag, aes(x=lag)) + geom_histogram(binwidth = 10)  + facet_wrap(~s_num) + xlim(50,350)
ggplot(filt_lag, aes(x=log_lag)) + geom_histogram(binwidth = .02) + facet_wrap(~s_num)
## with a run, plot the mean lag
round_filt_lag <- filt_lag %>%
group_by(s_num, n_travel_steps, travel_key_cond, round, phase) %>%
summarise(trial_num = first(trial_num), mean_lag = mean(lag), mean_log_lag = mean(log_lag)) %>% mutate(round_num = as.integer(as.character(round)))
# plot mean lag as a function of round number
lag_by_round <- round_filt_lag %>% group_by(s_num, round_num) %>% summarise(mean_lag = mean(mean_lag))
ggplot(lag_by_round, aes(x= round_num, y = mean_lag)) + geom_point() + geom_line() + facet_wrap(~s_num)
## with a run, plot the mean lag
round_filt_lag <- filt_lag %>%
group_by(s_num, n_travel_steps, travel_key_cond, round, phase) %>%
summarise(trial_num = first(trial_num), mean_lag = mean(lag), mean_log_lag = mean(log_lag)) %>% mutate(round_num = as.integer(as.character(round)))
# plot mean lag as a function of round number
lag_by_round <- round_filt_lag %>% group_by(s_num, round_num) %>% summarise(mean_lag = mean(mean_lag))
ggplot(lag_by_round, aes(x= round_num, y = mean_lag)) + geom_point() + geom_line() + facet_wrap(~s_num)
trial_filt_lag <- round_filt_lag %>%
group_by(s_num, n_travel_steps, travel_key_cond, phase) %>%
summarise(trial_num = first(trial_num),
mean_lag = mean(mean_lag),
mean_log_lag = mean(mean_log_lag)) %>% ungroup() %>% mutate(s_num = as.factor(s_num))
ggplot(trial_filt_lag,
aes(x = factor(n_travel_steps), y = mean_log_lag, fill = s_num)) +
geom_point(aes(color = s_num), size = 2)+
geom_line(aes(group = s_num, color = s_num), size = 1.2) +
facet_grid(phase ~ travel_key_cond) + theme_minimal()
## with a run, plot the mean lag
round_filt_lag <- filt_lag %>%
group_by(s_num, n_travel_steps, travel_key_cond, round, phase) %>%
summarise(trial_num = first(trial_num), mean_lag = mean(lag), mean_log_lag = mean(log_lag)) %>% mutate(round_num = as.integer(as.character(round)))
# plot mean lag as a function of round number
lag_by_round <- round_filt_lag %>% group_by(s_num, round_num) %>% summarise(mean_lag = mean(mean_lag))
ggplot(lag_by_round, aes(x= round_num, y = mean_lag)) + geom_point() + geom_line() + facet_wrap(~s_num)
trial_filt_lag <- round_filt_lag %>%
group_by(s_num, n_travel_steps, travel_key_cond, phase) %>%
summarise(trial_num = first(trial_num),
mean_lag = mean(mean_lag),
mean_log_lag = mean(mean_log_lag)) %>% ungroup() %>% mutate(s_num = as.factor(s_num))
ggplot(trial_filt_lag,
aes(x = factor(n_travel_steps), y = mean_log_lag, fill = s_num)) +
geom_point(aes(color = s_num), size = 2)+
geom_line(aes(group = s_num, color = s_num), size = 1.2) +
facet_grid(phase ~ travel_key_cond) + theme_minimal()
ggplot(trial_filt_lag,
aes(x = travel_key_cond, y = mean_log_lag, fill = s_num)) +
geom_point(aes(color = s_num), size = 2)+
geom_line(aes(group = s_num, color = s_num), size = 1.2) +
facet_grid(phase ~ n_travel_steps) + theme_minimal()
## with a run, plot the mean lag
round_filt_lag <- filt_lag %>%
group_by(s_num, n_travel_steps, travel_key_cond, round, phase) %>%
summarise(trial_num = first(trial_num), mean_lag = mean(lag), mean_log_lag = mean(log_lag)) %>% mutate(round_num = as.integer(as.character(round)))
# plot mean lag as a function of round number
lag_by_round <- round_filt_lag %>% group_by(s_num, round_num) %>% summarise(mean_lag = mean(mean_lag))
ggplot(lag_by_round, aes(x= round_num, y = mean_lag)) + geom_point() + geom_line() + facet_wrap(~s_num)
trial_filt_lag <- round_filt_lag %>%
group_by(s_num, n_travel_steps, travel_key_cond, phase) %>%
summarise(trial_num = first(trial_num),
mean_lag = mean(mean_lag),
mean_log_lag = mean(mean_log_lag)) %>% ungroup() %>% mutate(s_num = as.factor(s_num))
ggplot(trial_filt_lag,
aes(x = factor(n_travel_steps), y = mean_lag, fill = s_num)) +
geom_point(aes(color = s_num), size = 2)+
geom_line(aes(group = s_num, color = s_num), size = 1.2) +
facet_grid(phase ~ travel_key_cond) + theme_minimal()
ggplot(trial_filt_lag,
aes(x = travel_key_cond, y = mean_lag, fill = s_num)) +
geom_point(aes(color = s_num), size = 2)+
geom_line(aes(group = s_num, color = s_num), size = 1.2) +
facet_grid(phase ~ n_travel_steps) + theme_minimal()
trial_filt_lag
trial_filt_lag %>% group_by(n_travel_steps, travel_key_cond, phase) %>% summarise(gm_lag = mean(mean(lag)), gml_lag = mean(mean_log_lag)) %>% ungroup()
trial_filt_lag %>% group_by(n_travel_steps, travel_key_cond, phase) %>% summarise(gm_lag = mean(mean_lag)), gml_lag = mean(mean_log_lag)) %>% ungroup()
trial_filt_lag %>% group_by(n_travel_steps, travel_key_cond, phase) %>% summarise(gm_lag = mean(mean_lag), gml_lag = mean(mean_log_lag)) %>% ungroup()
group_lag <- trial_filt_lag %>% group_by(n_travel_steps, travel_key_cond, phase) %>% summarise(gm_lag = mean(mean_lag), gml_lag = mean(mean_log_lag)) %>% ungroup()
ggplot(group_lag, aes(x = factor(n_travel_steps), y = mean_log_lag, color = travel_key_cond)) +
geom_line(aes(group = travel_key_cond), size = 2) #+
group_lag <- trial_filt_lag %>% group_by(n_travel_steps, travel_key_cond, phase) %>% summarise(gm_lag = mean(mean_lag), gml_lag = mean(mean_log_lag)) %>% ungroup()
ggplot(group_lag, aes(x = factor(n_travel_steps), y = gml_lag, color = travel_key_cond)) +
geom_line(aes(group = travel_key_cond), size = 2) #+
# geom_errorbar(aes(ymin = gm_thresh - gsd_thresh, ymax = gm_thresh+gsd_thresh), width = .1, size = 2) +
#geom_point(size = 4) + ylab('group mean exit threshold') + xlab('# travel steps') + labs(color = 'travel effort') + theme_minimal()
group_lag <- trial_filt_lag %>% group_by(n_travel_steps, travel_key_cond, phase) %>% summarise(gm_lag = mean(mean_lag), gml_lag = mean(mean_log_lag)) %>% ungroup()
ggplot(group_lag, aes(x = factor(n_travel_steps), y = gml_lag, color = travel_key_cond)) +
geom_line(aes(group = travel_key_cond), size = 2) + facet_wrap(~phase) #+
# geom_errorbar(aes(ymin = gm_thresh - gsd_thresh, ymax = gm_thresh+gsd_thresh), width = .1, size = 2) +
#geom_point(size = 4) + ylab('group mean exit threshold') + xlab('# travel steps') + labs(color = 'travel effort') + theme_minimal()
group_lag <- trial_filt_lag %>% group_by(n_travel_steps, travel_key_cond, phase) %>% summarise(gm_lag = mean(mean_lag), gml_lag = mean(mean_log_lag)) %>% ungroup()
ggplot(group_lag, aes(x = factor(n_travel_steps), y = gml_lag, color = travel_key_cond)) +
geom_line(aes(group = travel_key_cond), size = 2) + facet_wrap(~phase) + geom_point(size = 2)
# geom_errorbar(aes(ymin = gm_thresh - gsd_thresh, ymax = gm_thresh+gsd_thresh), width = .1, size = 2) +
#geom_point(size = 4) + ylab('group mean exit threshold') + xlab('# travel steps') + labs(color = 'travel effort') + theme_minimal()
group_lag <- trial_filt_lag %>% group_by(n_travel_steps, travel_key_cond, phase) %>% summarise(gm_lag = mean(mean_lag), gml_lag = mean(mean_log_lag)) %>% ungroup()
ggplot(group_lag, aes(x = factor(n_travel_steps), y = gm_lag, color = travel_key_cond)) +
geom_line(aes(group = travel_key_cond), size = 2) + facet_wrap(~phase) + geom_point(size = 2)
# geom_errorbar(aes(ymin = gm_thresh - gsd_thresh, ymax = gm_thresh+gsd_thresh), width = .1, size = 2) +
#geom_point(size = 4) + ylab('group mean exit threshold') + xlab('# travel steps') + labs(color = 'travel effort') + theme_minimal()
hl_model <- lmer(log_lag ~ trial_num + n_travel_steps + travel_key_cond  + (1 + trial_num + n_travel_steps + travel_key_cond |subj), data = harvest_lag, control = lmerControl(optimizer ="optimx",optCtrl=list(method='nlminb')))
harvest_lag <- filt_lag %>% ungroup() %>% filter(phase == "HARVEST")
hl_model <- lmer(log_lag ~ trial_num + n_travel_steps + travel_key_cond  + (1 + trial_num + n_travel_steps + travel_key_cond |subj), data = harvest_lag, control = lmerControl(optimizer ="optimx",optCtrl=list(method='nlminb')))
summary(hl_model)
install.packages(knitr)
install.packages('knitr')
rm(list = ls())
setwd("C:/Users/erussek/Gamble_Data")
library(tidyr)
library(dplyr)
library(zoo)
library(ggplot2)
library(ggpubr)
library(RcppRoll)
library(reticulate)
# just look at the choice data... for each trial, look at the safe , trigger, prob, # accept
task_data <- data %>%
filter(block_number > 6, "TEST" == phase)  %>% # because you labelled block 7 wrong
select(s_num, block_number, trigger_val_actual, safe_val_actual,other_noise, o1_trigger, gl_type, accept, rt, phase, p_trigger, safe_val_base, trigger_val_base) %>% arrange(s_num,block_number) # no trial number?
model_quiz_data <- data %>% filter(grepl("evan-more-like", trial_type)) %>% select(s_num, correct, c1_number, c2_number, outcome_number, choice_number, rt, block_number)
data <- read.csv('meg_online1b.csv')
data <- data %>% ungroup() %>% bind_cols(s_num = group_indices(., subjectID))
model_quiz_data <- data %>% filter(grepl("evan-more-like", trial_type)) %>% select(s_num, correct, c1_number, c2_number, outcome_number, choice_number, rt, block_number)
# don't have the data...
# if you put save block data too early, you'll miss data!
# change this...
# just look at the choice data... for each trial, look at the safe , trigger, prob, # accept
task_data <- data %>%
filter(block_number > 6, "TEST" == phase)  %>% # because you labelled block 7 wrong
select(s_num, block_number, trigger_val_actual, safe_val_actual,other_noise, o1_trigger, gl_type, accept, rt, phase, p_trigger, safe_val_base, trigger_val_base) %>% arrange(s_num,block_number) # no trial number?
task_bt <- task_data %>% mutate(trigger_val = trigger_val_actual,
safe_val = safe_val_actual,
other_val = other_noise) %>%
group_by(s_num, trigger_val, safe_val, other_val, p_trigger) %>%
summarise(n_trials = n(), n_accept = sum(accept), prop_accept = sum(accept)/n())
# ... get a proportion of this...
# for each subject, what proportion of trials are not 1 or 0
task_prop_accept <- task_bt %>% group_by(s_num, prop_accept) %>% summarise(n_trials = n()) %>% filter(prop_accept %in% c(0, 0.5, 1))
# really need to look at the subject you scanned...
ggplot(task_prop_accept, aes(x = prop_accept, y = n_trials)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_wrap(~s_num)
#s1_data <- task_data %>% filter(s_num == 1)
#####
task_data$trigger_val_base %>% unique()
nt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_trials = n())
# could the problem be practice trials?
ggplot(nt_data %>% filter(trigger_val_base > 0, s_num == 8), aes(x = p_trigger, y = n_trials)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(safe_val_base ~ trigger_val_base)
ggplot(nt_data %>% filter(trigger_val_base < 0, s_num == 8), aes(x = p_trigger, y = n_trials)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(safe_val_base ~ trigger_val_base)
ggplot(nt_data %>% filter(trigger_val_base < 0, s_num == 1), aes(x = p_trigger, y = n_trials)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(safe_val_base ~ trigger_val_base)
# could the problem be practice trials?
ggplot(nt_data %>% filter(trigger_val_base > 0, s_num == 8), aes(x = p_trigger, y = n_trials)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(safe_val_base ~ trigger_val_base)
task_bt <- task_data %>% mutate(trigger_val = trigger_val_actual,
safe_val = safe_val_actual,
other_val = other_noise) %>%
group_by(s_num, trigger_val, safe_val, other_val, p_trigger) %>%
summarise(n_trials = n(), n_accept = sum(accept), prop_accept = sum(accept)/n())
# ... get a proportion of this...
# for each subject, what proportion of trials are not 1 or 0
task_prop_accept <- task_bt %>% group_by(s_num, prop_accept) %>% summarise(n_trials = n()) %>% filter(prop_accept %in% c(0, 0.5, 1))
# really need to look at the subject you scanned...
ggplot(task_prop_accept, aes(x = prop_accept, y = n_trials)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_wrap(~s_num)
# just look at the choice data... for each trial, look at the safe , trigger, prob, # accept
task_data <- data %>%
filter(block_number > 6, "TEST" == phase)  %>% # because you labelled block 7 wrong
select(s_num, block_number, trigger_val_actual, safe_val_actual,other_noise, o1_trigger, gl_type, accept, rt, phase, p_trigger, safe_val_base, trigger_val_base) %>% arrange(s_num,block_number) # no trial number?
#s1_data <- task_data %>% filter(s_num == 1)
nt_data
# could the problem be practice trials?
# just confirm we ran the correct # of trials...
task_data$trigger_val_base %>% unique()
nt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_trials = n())
ggplot(nt_data %>% filter(trigger_val_base > 0, s_num == 8), aes(x = p_trigger, y = n_trials)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(safe_val_base ~ trigger_val_base)
ggplot(nt_data %>% filter(trigger_val_base < 0, s_num == 1), aes(x = p_trigger, y = n_trials)) +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(safe_val_base ~ trigger_val_base)
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1))
# block number 9 is coded too many times...
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1))
tt_data
# block number 9 is coded too many times...
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
tt_data
# block number 9 is coded too many times...
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
# block number 9 is coded too many times...
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
ggplot(tt_data %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = safe_val_base)) + facet_wrap(trigger_val_base) + geom_point()
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
ggplot(tt_data %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = safe_val_base)) + facet_wrap(trigger_val_base) + geom_point()
ttdata
tt_data
s1dat
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = safe_val_base)) + facet_wrap(~trigger_val_base) + geom_point()
# block number 9 is coded too many times...
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point()
# block number 9 is coded too many times...
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point() + geom_line()
# block number 9 is coded too many times...
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 1.2) + geom_line()
# block number 9 is coded too many times...
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line()
# block number 9 is coded too many times...
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 2)
# block number 9 is coded too many times...
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5)
# block number 9 is coded too many times...
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = safe_val_base)) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5)
# block number 9 is coded too many times...
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5)
# block number 9 is coded too many times...
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5)
ggplot(s1dat %>% filter(trigger_val_base < 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5)
# block number 9 is coded too many times...
library(ggpubr)
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
pos_plot <- ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5)
neg_plot <- ggplot(s1dat %>% filter(trigger_val_base < 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5)
full_plot <- ggarrange(pos_plot,neg_plot)
# block number 9 is coded too many times...
library(ggpubr)
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
pos_plot <- ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5)
neg_plot <- ggplot(s1dat %>% filter(trigger_val_base < 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5)
full_plot <- ggarrange(pos_plot,neg_plot)
plot(full_plot)
# block number 9 is coded too many times...
library(ggpubr)
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
pos_plot <- ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5)
neg_plot <- ggplot(s1dat %>% filter(trigger_val_base < 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5)
full_plot <- ggarrange(pos_plot,neg_plot, nrow = 2, ncol = 1)
plot(full_plot)
# block number 9 is coded too many times...
library(ggpubr)
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
pos_plot <- ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5)
neg_plot <- ggplot(s1dat %>% filter(trigger_val_base < 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal()
full_plot <- ggarrange(pos_plot,neg_plot, nrow = 2, ncol = 1)
plot(full_plot)
# block number 9 is coded too many times...
library(ggpubr)
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s1dat = tt_data %>% filter(s_num == 1)
pos_plot <- ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal()
neg_plot <- ggplot(s1dat %>% filter(trigger_val_base < 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal()
full_plot <- ggarrange(pos_plot,neg_plot, nrow = 2, ncol = 1)
plot(full_plot)
# block number 9 is coded too many times...
library(ggpubr)
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s <-1
s1dat = tt_data %>% filter(s_num == s)
pos_plot <- ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal()
neg_plot <- ggplot(s1dat %>% filter(trigger_val_base < 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal()
full_plot <- ggarrange(pos_plot,neg_plot, nrow = 2, ncol = 1)
full_plot <- annotate_figuer(full_plot, top = paste('subj: ', s))
library(ggpubr)
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
s <-1
s1dat = tt_data %>% filter(s_num == s)
pos_plot <- ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal()
neg_plot <- ggplot(s1dat %>% filter(trigger_val_base < 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal()
full_plot <- ggarrange(pos_plot,neg_plot, nrow = 2, ncol = 1)
full_plot <- annotate_figure(full_plot, top = paste('subj: ', s))
plot(full_plot)
# block number 9 is coded too many times...
# plot proportion accept as a function of changing probability,
library(ggpubr)
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
for (s in 1:20){
s1dat = tt_data %>% filter(s_num == s)
pos_plot <- ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal()
neg_plot <- ggplot(s1dat %>% filter(trigger_val_base < 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal()
full_plot <- ggarrange(pos_plot,neg_plot, nrow = 2, ncol = 1)
full_plot <- annotate_figure(full_plot, top = paste('subj: ', s))
plot(full_plot)
}
# block number 9 is coded too many times...
# plot proportion accept as a function of changing probability,
library(ggpubr)
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
for (s in 1:20){
s1dat = tt_data %>% filter(s_num == s)
pos_plot <- ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)                                                                                                                                                                                                                 )
# plot proportion accept as a function of changing probability,
library(ggpubr)
tt_data <- task_data %>% group_by(s_num,safe_val_base,trigger_val_base, p_trigger) %>% summarise(n_accept = sum(accept == 1), nt = n(), prop_accept = sum(accept == 1)/n())
for (s in 1:20){
s1dat = tt_data %>% filter(s_num == s)
pos_plot <- ggplot(s1dat %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
neg_plot <- ggplot(s1dat %>% filter(trigger_val_base < 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
full_plot <- ggarrange(pos_plot,neg_plot, nrow = 2, ncol = 1)
full_plot <- annotate_figure(full_plot, top = paste('subj: ', s))
plot(full_plot)
}
## compute grand means of this...
sdata <- task_data %>% group_by(safe_val_base,trigger_val_base, p_trigger) %>% summarise(gprop_accept = mean(prop_accept))
## compute grand means of this...
sdata <- tt_data %>% group_by(safe_val_base,trigger_val_base, p_trigger) %>% summarise(gprop_accept = mean(prop_accept))
## compute grand means of this...
sdata <- tt_data %>% group_by(safe_val_base,trigger_val_base, p_trigger) %>% summarise(gprop_accept = mean(prop_accept))
pos_plot <- ggplot(sdata, aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
neg_plot <- ggplot(sdata, aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
full_plot <- ggarrange(pos_plot,neg_plot, nrow = 2, ncol = 1)
## compute grand means of this...
sdata <- tt_data %>% group_by(safe_val_base,trigger_val_base, p_trigger) %>% summarise(prop_accept = mean(prop_accept))
pos_plot <- ggplot(sdata, aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
neg_plot <- ggplot(sdata, aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
full_plot <- ggarrange(pos_plot,neg_plot, nrow = 2, ncol = 1)
full_plot <- annotate_figure(full_plot, top = 'group')
plot(full_plot)
## compute grand means of this...
sdata <- tt_data %>% group_by(safe_val_base,trigger_val_base, p_trigger) %>% summarise(prop_accept = mean(prop_accept))
pos_plot <- ggplot(sdata, aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
neg_plot <- ggplot(sdata, aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
full_plot <- ggarrange(pos_plot,neg_plot, nrow = 2, ncol = 1)
#full_plot <- annotate_figure(full_plot, top = 'group')
#plot(full_plot)
## compute grand means of this...
sdata <- tt_data %>% group_by(safe_val_base,trigger_val_base, p_trigger) %>% summarise(prop_accept = mean(prop_accept))
pos_plot <- ggplot(sdata, aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
neg_plot <- ggplot(sdata, aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
full_plot <- ggarrange(pos_plot,neg_plot, nrow = 2, ncol = 1)
#full_plot <- annotate_figure(full_plot, top = 'group')
plot(full_plot)
## compute grand means of this...
sdata <- tt_data %>% group_by(safe_val_base,trigger_val_base, p_trigger) %>% summarise(prop_accept = mean(prop_accept))
pos_plot <- ggplot(sdata %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
neg_plot <- ggplot(sdata, aes(x = p_trigger %>% filter(trigger_val_base < 0), y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
full_plot <- ggarrange(pos_plot,neg_plot, nrow = 2, ncol = 1)
## compute grand means of this...
sdata <- tt_data %>% group_by(safe_val_base,trigger_val_base, p_trigger) %>% summarise(prop_accept = mean(prop_accept))
pos_plot <- ggplot(sdata %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
neg_plot <- ggplot(sdata, aes(x = p_trigger %>% filter(trigger_val_base < 0), y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
full_plot <- ggarrange(pos_plot,neg_plot, nrow = 2, ncol = 1)
## compute grand means of this...
sdata <- tt_data %>% group_by(safe_val_base,trigger_val_base, p_trigger) %>% summarise(prop_accept = mean(prop_accept))
pos_plot <- ggplot(sdata %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
neg_plot <- ggplot(sdata %>% filter(trigger_val_base < 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
full_plot <- ggarrange(pos_plot,neg_plot, nrow = 2, ncol = 1)
full_plot <- annotate_figure(full_plot, top = 'group')
plot(full_plot)
sdata
?is.na
## compute grand means of this...
sdata <- tt_data %>% group_by(safe_val_base,trigger_val_base, p_trigger) %>% summarise(prop_accept = sum(prop_accept)/sum(!is.na(prop_accept)))
pos_plot <- ggplot(sdata %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
neg_plot <- ggplot(sdata %>% filter(trigger_val_base < 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
full_plot <- ggarrange(pos_plot,neg_plot, nrow = 2, ncol = 1)
full_plot <- annotate_figure(full_plot, top = 'group')
plot(full_plot)
## compute grand means of this...
sdata <- tt_data %>% group_by(safe_val_base,trigger_val_base, p_trigger) %>% summarise(prop_accept = sum(prop_accept, na.rm = TRUE)/sum(!is.na(prop_accept)))
pos_plot <- ggplot(sdata %>% filter(trigger_val_base > 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
neg_plot <- ggplot(sdata %>% filter(trigger_val_base < 0), aes(x = p_trigger, y = prop_accept, color = as.factor(safe_val_base))) + facet_wrap(~trigger_val_base) + geom_point(size = 2) + geom_line(size = 1.5) + theme_minimal() + ylim(0,1)
full_plot <- ggarrange(pos_plot,neg_plot, nrow = 2, ncol = 1)
full_plot <- annotate_figure(full_plot, top = 'group')
plot(full_plot)
head(task_data)
## some stats...
library(lmerTest)
# just do the win
gain_data <- task_data %>% filter(gl_type == 'gain)
## some stats...
library(lmerTest)
# just do the win
gain_data <- task_data %>% filter(gl_type == 'gain')
## some stats...
library(lmerTest)
# just do the win
gain_data <- task_data %>% filter(gl_type == 'gain')
glmer(accept ~ safe_val_actual + trigger_val_actual + p_trigger +
(1 + safe_val_actual + trigger_val_actual + p_trigger | subj))
## some stats...
library(lmerTest)
# just do the win
gain_data <- task_data %>% filter(gl_type == 'gain')
gain_model <- glmer(accept ~ safe_val_actual + trigger_val_actual + p_trigger +
(1 + safe_val_actual + trigger_val_actual + p_trigger | subj), data = gain_data)
## some stats...
library(lmerTest)
# just do the win
gain_data <- task_data %>% filter(gl_type == 'gain')
gain_model <- glmer(accept ~ safe_val_actual + trigger_val_actual + p_trigger +
(1 + safe_val_actual + trigger_val_actual + p_trigger | s_num), data = gain_data)
## some stats...
library(lmerTest)
# just do the win
gain_data <- task_data %>% filter(gl_type == 'gain')
gain_model <- glmer(accept ~ safe_val_actual + trigger_val_actual + p_trigger +
(1 + safe_val_actual + trigger_val_actual + p_trigger | s_num), data = gain_data ,family = binomial)
summary(gain_model)
## some stats...
library(lmerTest)
# just do the win
gain_data <- task_data %>% filter(gl_type == 'gain')
gain_data$p_trigger_mult <- 10*gain_data$p_trigger
gain_model <- glmer(accept ~ safe_val_actual + trigger_val_actual + p_trigger_mult +
(1 + safe_val_actual + trigger_val_actual + p_trigger_mult | s_num), data = gain_data ,family = binomial(link = "logit"))
summary(gain_model)
loss_data <- task_data %>% filter(gl_type == 'loss')
loss_model <- glmer(accept ~ safe_val_actual + trigger_val_actual + p_trigger +
(1 + safe_val_actual + trigger_val_actual + p_trigger | s_num), data = loss_data ,family = binomial(link = "logit"))
loss_data <- task_data %>% filter(gl_type == 'loss')
loss_data$p_trigger_mult <- 100*loss_data$p_trigger
loss_model <- glmer(accept ~ safe_val_actual + trigger_val_actual + p_trigger_mult) +
(1 + safe_val_actual + trigger_val_actual + p_trigger_mult | s_num), data = loss_data ,family = binomial(link = "logit"))
loss_data <- task_data %>% filter(gl_type == 'loss')
loss_data$p_trigger_mult <- 100*loss_data$p_trigger
loss_model <- glmer(accept ~ safe_val_actual + trigger_val_actual + p_trigger_mult +
(1 + safe_val_actual + trigger_val_actual + p_trigger_mult | s_num), data = loss_data ,family = binomial(link = "logit"))
summary(loss_model)
task$data$safe_val_actual
task_data$safe_val_actual
task_data$safe_val_actual %>% unique()
task_data$trigger_val_actual
task_data$trigger_val_actual %>% unique()
?isSingular
using Pkg
